Terminals unused in grammar

   KEYWORD
   NONE
   THEN
   DOT
   OR
   AND
   COMPARE


State 13 conflicts: 2 shift/reduce
State 31 conflicts: 2 shift/reduce
State 109 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 136 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID SEMICOLON declarations subprogram_declarations

    2 declarations: /* empty */
    3             | type identifier_list SEMICOLON declarations subprogram_declarations

    4 identifier_list: ID
    5                | ID COMMA identifier_list

    6 type: TYPE
    7     | TYPE LB INT RB

    8 subprogram_declarations: /* empty */
    9                        | subprogram_declaration subprogram_declarations

   10 subprogram_declaration: subprogram_head declarations compound_statement

   11 subprogram_head: FUNCTION ID arguments COLON TYPE SEMICOLON
   12                | PROCEDURE ID arguments SEMICOLON

   13 arguments: /* empty */
   14          | LP parameter_list RP

   15 parameter_list: identifier_list COLON type
   16               | identifier_list COLON type SEMICOLON parameter_list

   17 compound_statement: _BEGIN statement_list _END

   18 statement_list: statement
   19               | statement SEMICOLON statement_list

   20 statement: variable ASSIGNMENT expression
   21          | print_statement
   22          | procedure_statement
   23          | compound_statement
   24          | if_statement
   25          | while_statement
   26          | for_statement
   27          | RETURN expression
   28          | NOP

   29 if_statement: IF expression COLON statement elif_statement else_expression

   30 elif_statement: /* empty */
   31               | ELIF expression COLON statement elif_statement

   32 else_expression: /* empty */
   33                | ELSE COLON expression

   34 while_statement: WHILE expression COLON statement else_statement

   35 for_statement: FOR simple_expression relop simple_expression COLON statement else_statement
   36              | FOR simple_expression relop simple_expression relop simple_expression COLON statement else_statement
   37              | FOR simple_expression relop simple_expression relop simple_expression relop simple_expression COLON statement else_statement

   38 else_statement: /* empty */
   39               | ELSE COLON statement

   40 print_statement: PRINT
   41                | PRINT LP expression RP

   42 variable: ID
   43         | ID LB expression RB

   44 procedure_statement: ID LP actual_parameter_expression RP

   45 actual_parameter_expression: /* empty */
   46                            | expression_list

   47 expression_list: expression
   48                | expression COMMA expression_list

   49 expression: simple_expression
   50           | simple_expression relop simple_expression

   51 simple_expression: term
   52                  | term addop simple_expression

   53 term: factor
   54     | factor multop term

   55 factor: INT
   56       | FLOAT
   57       | variable
   58       | procedure_statement
   59       | NOT factor
   60       | sign factor

   61 sign: PLUS
   62     | MINUS

   63 relop: GREATER
   64      | EQGREATER
   65      | LESS
   66      | EQLESS
   67      | EQUAL
   68      | NEQUAL
   69      | IN

   70 addop: PLUS
   71      | MINUS

   72 multop: MUL
   73       | DIV


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 1 4 5 11 12 42 43 44
TYPE (259) 6 7 11
INT (260) 7 55
FLOAT (261) 56
KEYWORD (262)
NONE (263)
ASSIGNMENT (264) 20
PLUS (265) 61 70
MINUS (266) 62 71
MUL (267) 72
DIV (268) 73
LESS (269) 65
GREATER (270) 63
EQUAL (271) 67
EQLESS (272) 66
EQGREATER (273) 64
NEQUAL (274) 68
NOT (275) 59
LP (276) 14 41 44
RP (277) 14 41 44
LB (278) 7 43
RB (279) 7 43
PROGRAM (280) 1
FUNCTION (281) 11
PROCEDURE (282) 12
_BEGIN (283) 17
_END (284) 17
IF (285) 29
THEN (286)
ELSE (287) 33 39
NOP (288) 28
FOR (289) 35 36 37
ELIF (290) 31
WHILE (291) 34
RETURN (292) 27
PRINT (293) 40 41
IN (294) 69
SEMICOLON (295) 1 3 11 12 16 19
COLON (296) 11 15 16 29 31 33 34 35 36 37 39
DOT (297)
COMMA (298) 5 48
OR (299)
AND (300)
COMPARE (301)
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
declarations (50)
    on left: 2 3, on right: 1 3 10
identifier_list (51)
    on left: 4 5, on right: 3 5 15 16
type (52)
    on left: 6 7, on right: 3 15 16
subprogram_declarations (53)
    on left: 8 9, on right: 1 3 9
subprogram_declaration (54)
    on left: 10, on right: 9
subprogram_head (55)
    on left: 11 12, on right: 10
arguments (56)
    on left: 13 14, on right: 11 12
parameter_list (57)
    on left: 15 16, on right: 14 16
compound_statement (58)
    on left: 17, on right: 10 23
statement_list (59)
    on left: 18 19, on right: 17 19
statement (60)
    on left: 20 21 22 23 24 25 26 27 28, on right: 18 19 29 31 34 35
    36 37 39
if_statement (61)
    on left: 29, on right: 24
elif_statement (62)
    on left: 30 31, on right: 29 31
else_expression (63)
    on left: 32 33, on right: 29
while_statement (64)
    on left: 34, on right: 25
for_statement (65)
    on left: 35 36 37, on right: 26
else_statement (66)
    on left: 38 39, on right: 34 35 36 37
print_statement (67)
    on left: 40 41, on right: 21
variable (68)
    on left: 42 43, on right: 20 57
procedure_statement (69)
    on left: 44, on right: 22 58
actual_parameter_expression (70)
    on left: 45 46, on right: 44
expression_list (71)
    on left: 47 48, on right: 46 48
expression (72)
    on left: 49 50, on right: 20 27 29 31 33 34 41 43 47 48
simple_expression (73)
    on left: 51 52, on right: 35 36 37 49 50 52
term (74)
    on left: 53 54, on right: 51 52 54
factor (75)
    on left: 55 56 57 58 59 60, on right: 53 54 59 60
sign (76)
    on left: 61 62, on right: 60
relop (77)
    on left: 63 64 65 66 67 68 69, on right: 35 36 37 50
addop (78)
    on left: 70 71, on right: 52
multop (79)
    on left: 72 73, on right: 54


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . ID SEMICOLON declarations subprogram_declarations

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID . SEMICOLON declarations subprogram_declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM ID SEMICOLON . declarations subprogram_declarations

    TYPE  shift, and go to state 6

    $default  reduce using rule 2 (declarations)

    declarations  go to state 7
    type          go to state 8


State 6

    6 type: TYPE .
    7     | TYPE . LB INT RB

    LB  shift, and go to state 9

    $default  reduce using rule 6 (type)


State 7

    1 program: PROGRAM ID SEMICOLON declarations . subprogram_declarations

    FUNCTION   shift, and go to state 10
    PROCEDURE  shift, and go to state 11

    $default  reduce using rule 8 (subprogram_declarations)

    subprogram_declarations  go to state 12
    subprogram_declaration   go to state 13
    subprogram_head          go to state 14


State 8

    3 declarations: type . identifier_list SEMICOLON declarations subprogram_declarations

    ID  shift, and go to state 15

    identifier_list  go to state 16


State 9

    7 type: TYPE LB . INT RB

    INT  shift, and go to state 17


State 10

   11 subprogram_head: FUNCTION . ID arguments COLON TYPE SEMICOLON

    ID  shift, and go to state 18


State 11

   12 subprogram_head: PROCEDURE . ID arguments SEMICOLON

    ID  shift, and go to state 19


State 12

    1 program: PROGRAM ID SEMICOLON declarations subprogram_declarations .

    $default  reduce using rule 1 (program)


State 13

    9 subprogram_declarations: subprogram_declaration . subprogram_declarations

    FUNCTION   shift, and go to state 10
    PROCEDURE  shift, and go to state 11

    FUNCTION   [reduce using rule 8 (subprogram_declarations)]
    PROCEDURE  [reduce using rule 8 (subprogram_declarations)]
    $default   reduce using rule 8 (subprogram_declarations)

    subprogram_declarations  go to state 20
    subprogram_declaration   go to state 13
    subprogram_head          go to state 14


State 14

   10 subprogram_declaration: subprogram_head . declarations compound_statement

    TYPE  shift, and go to state 6

    $default  reduce using rule 2 (declarations)

    declarations  go to state 21
    type          go to state 8


State 15

    4 identifier_list: ID .
    5                | ID . COMMA identifier_list

    COMMA  shift, and go to state 22

    $default  reduce using rule 4 (identifier_list)


State 16

    3 declarations: type identifier_list . SEMICOLON declarations subprogram_declarations

    SEMICOLON  shift, and go to state 23


State 17

    7 type: TYPE LB INT . RB

    RB  shift, and go to state 24


State 18

   11 subprogram_head: FUNCTION ID . arguments COLON TYPE SEMICOLON

    LP  shift, and go to state 25

    $default  reduce using rule 13 (arguments)

    arguments  go to state 26


State 19

   12 subprogram_head: PROCEDURE ID . arguments SEMICOLON

    LP  shift, and go to state 25

    $default  reduce using rule 13 (arguments)

    arguments  go to state 27


State 20

    9 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 9 (subprogram_declarations)


State 21

   10 subprogram_declaration: subprogram_head declarations . compound_statement

    _BEGIN  shift, and go to state 28

    compound_statement  go to state 29


State 22

    5 identifier_list: ID COMMA . identifier_list

    ID  shift, and go to state 15

    identifier_list  go to state 30


State 23

    3 declarations: type identifier_list SEMICOLON . declarations subprogram_declarations

    TYPE  shift, and go to state 6

    $default  reduce using rule 2 (declarations)

    declarations  go to state 31
    type          go to state 8


State 24

    7 type: TYPE LB INT RB .

    $default  reduce using rule 7 (type)


State 25

   14 arguments: LP . parameter_list RP

    ID  shift, and go to state 15

    identifier_list  go to state 32
    parameter_list   go to state 33


State 26

   11 subprogram_head: FUNCTION ID arguments . COLON TYPE SEMICOLON

    COLON  shift, and go to state 34


State 27

   12 subprogram_head: PROCEDURE ID arguments . SEMICOLON

    SEMICOLON  shift, and go to state 35


State 28

   17 compound_statement: _BEGIN . statement_list _END

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement_list       go to state 44
    statement            go to state 45
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 29

   10 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 10 (subprogram_declaration)


State 30

    5 identifier_list: ID COMMA identifier_list .

    $default  reduce using rule 5 (identifier_list)


State 31

    3 declarations: type identifier_list SEMICOLON declarations . subprogram_declarations

    FUNCTION   shift, and go to state 10
    PROCEDURE  shift, and go to state 11

    FUNCTION   [reduce using rule 8 (subprogram_declarations)]
    PROCEDURE  [reduce using rule 8 (subprogram_declarations)]
    $default   reduce using rule 8 (subprogram_declarations)

    subprogram_declarations  go to state 52
    subprogram_declaration   go to state 13
    subprogram_head          go to state 14


State 32

   15 parameter_list: identifier_list . COLON type
   16               | identifier_list . COLON type SEMICOLON parameter_list

    COLON  shift, and go to state 53


State 33

   14 arguments: LP parameter_list . RP

    RP  shift, and go to state 54


State 34

   11 subprogram_head: FUNCTION ID arguments COLON . TYPE SEMICOLON

    TYPE  shift, and go to state 55


State 35

   12 subprogram_head: PROCEDURE ID arguments SEMICOLON .

    $default  reduce using rule 12 (subprogram_head)


State 36

   42 variable: ID .
   43         | ID . LB expression RB
   44 procedure_statement: ID . LP actual_parameter_expression RP

    LP  shift, and go to state 56
    LB  shift, and go to state 57

    $default  reduce using rule 42 (variable)


State 37

   29 if_statement: IF . expression COLON statement elif_statement else_expression

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 65
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 38

   28 statement: NOP .

    $default  reduce using rule 28 (statement)


State 39

   35 for_statement: FOR . simple_expression relop simple_expression COLON statement else_statement
   36              | FOR . simple_expression relop simple_expression relop simple_expression COLON statement else_statement
   37              | FOR . simple_expression relop simple_expression relop simple_expression relop simple_expression COLON statement else_statement

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 70
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 40

   34 while_statement: WHILE . expression COLON statement else_statement

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 71
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 41

   27 statement: RETURN . expression

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 72
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 42

   40 print_statement: PRINT .
   41                | PRINT . LP expression RP

    LP  shift, and go to state 73

    $default  reduce using rule 40 (print_statement)


State 43

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 44

   17 compound_statement: _BEGIN statement_list . _END

    _END  shift, and go to state 74


State 45

   18 statement_list: statement .
   19               | statement . SEMICOLON statement_list

    SEMICOLON  shift, and go to state 75

    $default  reduce using rule 18 (statement_list)


State 46

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 47

   25 statement: while_statement .

    $default  reduce using rule 25 (statement)


State 48

   26 statement: for_statement .

    $default  reduce using rule 26 (statement)


State 49

   21 statement: print_statement .

    $default  reduce using rule 21 (statement)


State 50

   20 statement: variable . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 76


State 51

   22 statement: procedure_statement .

    $default  reduce using rule 22 (statement)


State 52

    3 declarations: type identifier_list SEMICOLON declarations subprogram_declarations .

    $default  reduce using rule 3 (declarations)


State 53

   15 parameter_list: identifier_list COLON . type
   16               | identifier_list COLON . type SEMICOLON parameter_list

    TYPE  shift, and go to state 6

    type  go to state 77


State 54

   14 arguments: LP parameter_list RP .

    $default  reduce using rule 14 (arguments)


State 55

   11 subprogram_head: FUNCTION ID arguments COLON TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 56

   44 procedure_statement: ID LP . actual_parameter_expression RP

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    $default  reduce using rule 45 (actual_parameter_expression)

    variable                     go to state 63
    procedure_statement          go to state 64
    actual_parameter_expression  go to state 79
    expression_list              go to state 80
    expression                   go to state 81
    simple_expression            go to state 66
    term                         go to state 67
    factor                       go to state 68
    sign                         go to state 69


State 57

   43 variable: ID LB . expression RB

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 82
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 58

   55 factor: INT .

    $default  reduce using rule 55 (factor)


State 59

   56 factor: FLOAT .

    $default  reduce using rule 56 (factor)


State 60

   61 sign: PLUS .

    $default  reduce using rule 61 (sign)


State 61

   62 sign: MINUS .

    $default  reduce using rule 62 (sign)


State 62

   59 factor: NOT . factor

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    factor               go to state 83
    sign                 go to state 69


State 63

   57 factor: variable .

    $default  reduce using rule 57 (factor)


State 64

   58 factor: procedure_statement .

    $default  reduce using rule 58 (factor)


State 65

   29 if_statement: IF expression . COLON statement elif_statement else_expression

    COLON  shift, and go to state 84


State 66

   49 expression: simple_expression .
   50           | simple_expression . relop simple_expression

    LESS       shift, and go to state 85
    GREATER    shift, and go to state 86
    EQUAL      shift, and go to state 87
    EQLESS     shift, and go to state 88
    EQGREATER  shift, and go to state 89
    NEQUAL     shift, and go to state 90
    IN         shift, and go to state 91

    $default  reduce using rule 49 (expression)

    relop  go to state 92


State 67

   51 simple_expression: term .
   52                  | term . addop simple_expression

    PLUS   shift, and go to state 93
    MINUS  shift, and go to state 94

    $default  reduce using rule 51 (simple_expression)

    addop  go to state 95


State 68

   53 term: factor .
   54     | factor . multop term

    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 53 (term)

    multop  go to state 98


State 69

   60 factor: sign . factor

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    factor               go to state 99
    sign                 go to state 69


State 70

   35 for_statement: FOR simple_expression . relop simple_expression COLON statement else_statement
   36              | FOR simple_expression . relop simple_expression relop simple_expression COLON statement else_statement
   37              | FOR simple_expression . relop simple_expression relop simple_expression relop simple_expression COLON statement else_statement

    LESS       shift, and go to state 85
    GREATER    shift, and go to state 86
    EQUAL      shift, and go to state 87
    EQLESS     shift, and go to state 88
    EQGREATER  shift, and go to state 89
    NEQUAL     shift, and go to state 90
    IN         shift, and go to state 91

    relop  go to state 100


State 71

   34 while_statement: WHILE expression . COLON statement else_statement

    COLON  shift, and go to state 101


State 72

   27 statement: RETURN expression .

    $default  reduce using rule 27 (statement)


State 73

   41 print_statement: PRINT LP . expression RP

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 102
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 74

   17 compound_statement: _BEGIN statement_list _END .

    $default  reduce using rule 17 (compound_statement)


State 75

   19 statement_list: statement SEMICOLON . statement_list

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement_list       go to state 103
    statement            go to state 45
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 76

   20 statement: variable ASSIGNMENT . expression

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 104
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 77

   15 parameter_list: identifier_list COLON type .
   16               | identifier_list COLON type . SEMICOLON parameter_list

    SEMICOLON  shift, and go to state 105

    $default  reduce using rule 15 (parameter_list)


State 78

   11 subprogram_head: FUNCTION ID arguments COLON TYPE SEMICOLON .

    $default  reduce using rule 11 (subprogram_head)


State 79

   44 procedure_statement: ID LP actual_parameter_expression . RP

    RP  shift, and go to state 106


State 80

   46 actual_parameter_expression: expression_list .

    $default  reduce using rule 46 (actual_parameter_expression)


State 81

   47 expression_list: expression .
   48                | expression . COMMA expression_list

    COMMA  shift, and go to state 107

    $default  reduce using rule 47 (expression_list)


State 82

   43 variable: ID LB expression . RB

    RB  shift, and go to state 108


State 83

   59 factor: NOT factor .

    $default  reduce using rule 59 (factor)


State 84

   29 if_statement: IF expression COLON . statement elif_statement else_expression

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 109
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 85

   65 relop: LESS .

    $default  reduce using rule 65 (relop)


State 86

   63 relop: GREATER .

    $default  reduce using rule 63 (relop)


State 87

   67 relop: EQUAL .

    $default  reduce using rule 67 (relop)


State 88

   66 relop: EQLESS .

    $default  reduce using rule 66 (relop)


State 89

   64 relop: EQGREATER .

    $default  reduce using rule 64 (relop)


State 90

   68 relop: NEQUAL .

    $default  reduce using rule 68 (relop)


State 91

   69 relop: IN .

    $default  reduce using rule 69 (relop)


State 92

   50 expression: simple_expression relop . simple_expression

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 110
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 93

   70 addop: PLUS .

    $default  reduce using rule 70 (addop)


State 94

   71 addop: MINUS .

    $default  reduce using rule 71 (addop)


State 95

   52 simple_expression: term addop . simple_expression

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 111
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 96

   72 multop: MUL .

    $default  reduce using rule 72 (multop)


State 97

   73 multop: DIV .

    $default  reduce using rule 73 (multop)


State 98

   54 term: factor multop . term

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    term                 go to state 112
    factor               go to state 68
    sign                 go to state 69


State 99

   60 factor: sign factor .

    $default  reduce using rule 60 (factor)


State 100

   35 for_statement: FOR simple_expression relop . simple_expression COLON statement else_statement
   36              | FOR simple_expression relop . simple_expression relop simple_expression COLON statement else_statement
   37              | FOR simple_expression relop . simple_expression relop simple_expression relop simple_expression COLON statement else_statement

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 113
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 101

   34 while_statement: WHILE expression COLON . statement else_statement

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 114
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 102

   41 print_statement: PRINT LP expression . RP

    RP  shift, and go to state 115


State 103

   19 statement_list: statement SEMICOLON statement_list .

    $default  reduce using rule 19 (statement_list)


State 104

   20 statement: variable ASSIGNMENT expression .

    $default  reduce using rule 20 (statement)


State 105

   16 parameter_list: identifier_list COLON type SEMICOLON . parameter_list

    ID  shift, and go to state 15

    identifier_list  go to state 32
    parameter_list   go to state 116


State 106

   44 procedure_statement: ID LP actual_parameter_expression RP .

    $default  reduce using rule 44 (procedure_statement)


State 107

   48 expression_list: expression COMMA . expression_list

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression_list      go to state 117
    expression           go to state 81
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 108

   43 variable: ID LB expression RB .

    $default  reduce using rule 43 (variable)


State 109

   29 if_statement: IF expression COLON statement . elif_statement else_expression

    ELIF  shift, and go to state 118

    ELIF      [reduce using rule 30 (elif_statement)]
    $default  reduce using rule 30 (elif_statement)

    elif_statement  go to state 119


State 110

   50 expression: simple_expression relop simple_expression .

    $default  reduce using rule 50 (expression)


State 111

   52 simple_expression: term addop simple_expression .

    $default  reduce using rule 52 (simple_expression)


State 112

   54 term: factor multop term .

    $default  reduce using rule 54 (term)


State 113

   35 for_statement: FOR simple_expression relop simple_expression . COLON statement else_statement
   36              | FOR simple_expression relop simple_expression . relop simple_expression COLON statement else_statement
   37              | FOR simple_expression relop simple_expression . relop simple_expression relop simple_expression COLON statement else_statement

    LESS       shift, and go to state 85
    GREATER    shift, and go to state 86
    EQUAL      shift, and go to state 87
    EQLESS     shift, and go to state 88
    EQGREATER  shift, and go to state 89
    NEQUAL     shift, and go to state 90
    IN         shift, and go to state 91
    COLON      shift, and go to state 120

    relop  go to state 121


State 114

   34 while_statement: WHILE expression COLON statement . else_statement

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 38 (else_statement)]
    $default  reduce using rule 38 (else_statement)

    else_statement  go to state 123


State 115

   41 print_statement: PRINT LP expression RP .

    $default  reduce using rule 41 (print_statement)


State 116

   16 parameter_list: identifier_list COLON type SEMICOLON parameter_list .

    $default  reduce using rule 16 (parameter_list)


State 117

   48 expression_list: expression COMMA expression_list .

    $default  reduce using rule 48 (expression_list)


State 118

   31 elif_statement: ELIF . expression COLON statement elif_statement

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 124
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 119

   29 if_statement: IF expression COLON statement elif_statement . else_expression

    ELSE  shift, and go to state 125

    ELSE      [reduce using rule 32 (else_expression)]
    $default  reduce using rule 32 (else_expression)

    else_expression  go to state 126


State 120

   35 for_statement: FOR simple_expression relop simple_expression COLON . statement else_statement

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 127
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 121

   36 for_statement: FOR simple_expression relop simple_expression relop . simple_expression COLON statement else_statement
   37              | FOR simple_expression relop simple_expression relop . simple_expression relop simple_expression COLON statement else_statement

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 128
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 122

   39 else_statement: ELSE . COLON statement

    COLON  shift, and go to state 129


State 123

   34 while_statement: WHILE expression COLON statement else_statement .

    $default  reduce using rule 34 (while_statement)


State 124

   31 elif_statement: ELIF expression . COLON statement elif_statement

    COLON  shift, and go to state 130


State 125

   33 else_expression: ELSE . COLON expression

    COLON  shift, and go to state 131


State 126

   29 if_statement: IF expression COLON statement elif_statement else_expression .

    $default  reduce using rule 29 (if_statement)


State 127

   35 for_statement: FOR simple_expression relop simple_expression COLON statement . else_statement

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 38 (else_statement)]
    $default  reduce using rule 38 (else_statement)

    else_statement  go to state 132


State 128

   36 for_statement: FOR simple_expression relop simple_expression relop simple_expression . COLON statement else_statement
   37              | FOR simple_expression relop simple_expression relop simple_expression . relop simple_expression COLON statement else_statement

    LESS       shift, and go to state 85
    GREATER    shift, and go to state 86
    EQUAL      shift, and go to state 87
    EQLESS     shift, and go to state 88
    EQGREATER  shift, and go to state 89
    NEQUAL     shift, and go to state 90
    IN         shift, and go to state 91
    COLON      shift, and go to state 133

    relop  go to state 134


State 129

   39 else_statement: ELSE COLON . statement

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 135
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 130

   31 elif_statement: ELIF expression COLON . statement elif_statement

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 136
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 131

   33 else_expression: ELSE COLON . expression

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 137
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 132

   35 for_statement: FOR simple_expression relop simple_expression COLON statement else_statement .

    $default  reduce using rule 35 (for_statement)


State 133

   36 for_statement: FOR simple_expression relop simple_expression relop simple_expression COLON . statement else_statement

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 138
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 134

   37 for_statement: FOR simple_expression relop simple_expression relop simple_expression relop . simple_expression COLON statement else_statement

    ID     shift, and go to state 36
    INT    shift, and go to state 58
    FLOAT  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    NOT    shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 139
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 135

   39 else_statement: ELSE COLON statement .

    $default  reduce using rule 39 (else_statement)


State 136

   31 elif_statement: ELIF expression COLON statement . elif_statement

    ELIF  shift, and go to state 118

    ELIF      [reduce using rule 30 (elif_statement)]
    $default  reduce using rule 30 (elif_statement)

    elif_statement  go to state 140


State 137

   33 else_expression: ELSE COLON expression .

    $default  reduce using rule 33 (else_expression)


State 138

   36 for_statement: FOR simple_expression relop simple_expression relop simple_expression COLON statement . else_statement

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 38 (else_statement)]
    $default  reduce using rule 38 (else_statement)

    else_statement  go to state 141


State 139

   37 for_statement: FOR simple_expression relop simple_expression relop simple_expression relop simple_expression . COLON statement else_statement

    COLON  shift, and go to state 142


State 140

   31 elif_statement: ELIF expression COLON statement elif_statement .

    $default  reduce using rule 31 (elif_statement)


State 141

   36 for_statement: FOR simple_expression relop simple_expression relop simple_expression COLON statement else_statement .

    $default  reduce using rule 36 (for_statement)


State 142

   37 for_statement: FOR simple_expression relop simple_expression relop simple_expression relop simple_expression COLON . statement else_statement

    ID      shift, and go to state 36
    _BEGIN  shift, and go to state 28
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    FOR     shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    PRINT   shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 143
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 143

   37 for_statement: FOR simple_expression relop simple_expression relop simple_expression relop simple_expression COLON statement . else_statement

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 38 (else_statement)]
    $default  reduce using rule 38 (else_statement)

    else_statement  go to state 144


State 144

   37 for_statement: FOR simple_expression relop simple_expression relop simple_expression relop simple_expression COLON statement else_statement .

    $default  reduce using rule 37 (for_statement)
